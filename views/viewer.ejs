<head>
    <meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1, user-scalable=no" />
    <meta charset="utf-8">

    <title>hzrxdy</title>

    <!-- The Viewer CSS -->
    <link rel="stylesheet" href="https://developer.api.autodesk.com/modelderivative/v2/viewers/style.min.css" type="text/css">

    <!-- Developer CSS -->
    <style>
        body {
            margin: 0;
        }

        #MyViewerDiv {
            width: 100%;
            height: 100%;
            margin: 0;
            background-color: #F0F8FF;
        }

        #MyNextButton {
            position: absolute;
            top: 5px;
            left: 5px;
            z-index: 1;
            font-size: 40px;
            cursor: pointer;
        }
    </style>
</head>

<body>

    <!-- The Viewer will be instantiated here -->
    <div id="MyViewerDiv"></div>
    <!-- <button id="MyNextButton" onClick="loadNextModel()">Next!</button> -->

    <!-- The Viewer JS -->
    <script src="https://developer.api.autodesk.com/modelderivative/v2/viewers/three.min.js"></script>
    <script src="https://developer.api.autodesk.com/modelderivative/v2/viewers/viewer3D.min.js"></script>

    <!-- Developer JS -->
    <script>
        var viewer;
        var lmvDoc;
        var viewables;
        var indexViewable;

        var options = {
            env: 'AutodeskProduction',
            //accessToken: '<%= _accessToken %>'
            getAccessToken: function (onGetAccessToken) {
                //
                // TODO: Replace static access token string below with call to fetch new token from your backend
                // Both values are provided by Forge's Authentication (OAuth) API.
                //
                // Example Forge's Authentication (OAuth) API return value:
                // {
                //    "access_token": "<YOUR_APPLICATION_TOKEN>",
                //    "token_type": "Bearer",
                //    "expires_in": 86400
                // }
                //
                var accessToken = '<%= _accessToken %>';
                var expireTimeSeconds = 3599;
                onGetAccessToken(accessToken, expireTimeSeconds);
            }
        };
        var documentId = 'urn:<%= _urn %>';
        Autodesk.Viewing.Initializer(options, function onInitialized() {
            Autodesk.Viewing.Document.load(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);
        });

        function loadNextModel() {/*
            //console.log('TODO: Load Next Model');
            viewer.tearDown();
            viewer.setUp(viewer.config);

            indexViewable = (indexViewable+1)%viewables.length;

            loadModel();*/


            viewer.tearDown();
            viewer.setUp(viewer.config);

            // Next viewable index. Loop back to 0 when overflown.
            indexViewable = (indexViewable + 1) % viewables.length;
            loadModel();
        }
        /**
        * Autodesk.Viewing.Document.load() success callback.
        * Proceeds with model initialization.
        */
        function onDocumentLoadSuccess(doc) {
            /*
                        // A document contains references to 3D and 2D viewables.
                        var viewables = Autodesk.Viewing.Document.getSubItemsWithProperties(doc.getRootItem(), { 'type': 'geometry' }, true);
                        if (viewables.length === 0) {
                            console.error('Document contains no viewables.');
                            return;
                        }
            
                        // Choose any of the avialble viewables
                        var initialViewable = viewables[0];
                        var svfUrl = doc.getViewablePath(initialViewable);
                        var modelOptions = {
                            sharedPropertyDbPath: doc.getPropertyDbPath()
                        };
            
                        var viewerDiv = document.getElementById('MyViewerDiv');
                        viewer = new Autodesk.Viewing.Private.GuiViewer3D(viewerDiv);
                        //viewer.start(svfUrl, modelOptions, onLoadModelSuccess, onLoadModelError);
                        var errorCode = viewer.start();
            
                        if(errorCode){
                            console.error('viewer.start() error -errorCode:' + errorCode);
                            return ;
                        }
            
                        indexViewable=0;
                        lmvDoc=doc;
            
                        loadModel();*/



            // A document contains references to 3D and 2D viewables.
            viewables = Autodesk.Viewing.Document.getSubItemsWithProperties(doc.getRootItem(), { 'type': 'geometry' }, true);
            if (viewables.length === 0) {
                console.error('Document contains no viewables.');
                return;
            }

            // Create Viewer instance and load model.
            var viewerDiv = document.getElementById('MyViewerDiv');
            viewer = new Autodesk.Viewing.Private.GuiViewer3D(viewerDiv);
            var errorCode = viewer.start();

            // Check for initialization errors.
            if (errorCode) {
                console.error('viewer.start() error - errorCode:' + errorCode);
                return;
            }

            // Choose any of the available viewables.
            indexViewable = 0;
            lmvDoc = doc;

            // Everything is set up, load the model.
            loadModel();


        }

        function loadModel() {/*
            var initialViewable = viewables[indexViewable];
            var svfUrl = lmvDoc.getViewablePath(initialViewable);
            var modelOptions = {
                sharedPropertyDbPath:lmvDoc.getPropertyDbPath()
            };
            viewer.loadModel(svfUrl,modelOptions,onLoadModelSuccess,onLoadModelError);
            */

            var initialViewable = viewables[indexViewable];
            var svfUrl = lmvDoc.getViewablePath(initialViewable);
            var modelOptions = {
                sharedPropertyDbPath: lmvDoc.getPropertyDbPath()
            };
            viewer.loadModel(svfUrl, modelOptions, onLoadModelSuccess, onLoadModelError);
        }

        /**
         * Autodesk.Viewing.Document.load() failuire callback.
         */
        function onDocumentLoadFailure(viewerErrorCode) {
            console.error('onDocumentLoadFailure() - errorCode:' + viewerErrorCode);
        }

        /**
         * viewer.loadModel() success callback.
         * Invoked after the model's SVF has been initially loaded.
         * It may trigger before any geometry has been downloaded and displayed on-screen.
         */
        function onLoadModelSuccess(model) {
            console.log('onLoadModelSuccess()!');
            console.log('Validate model loaded: ' + (viewer.model === model));
            console.log(model);
        }

        /**
         * viewer.loadModel() failure callback.
         * Invoked when there's an error fetching the SVF file.
         */
        function onLoadModelError(viewerErrorCode) {
            console.error('onLoadModelError() - errorCode:' + viewerErrorCode);
        }
    </script>
</body>